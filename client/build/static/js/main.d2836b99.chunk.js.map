{"version":3,"sources":["logo.svg","ABI.js","helper.js","table.js","RedeemTable.js","myCoupon.js","App.js","reportWebVitals.js","index.js"],"names":["ADDRESS","ABI","getPromotion","contractInstance","account","Promise","resolve","reject","codeArray","getPastEvents","filter","sponsorAddress","fromBlock","toBlock","error","events","console","log","length","i","push","returnValues","then","getPromotionForCouponHash","hash","couponHash","getRedeem","user","getRedeemByAccountAndCouponHash","couponhash","getRedeemCouponInfo","a","redeems","couponInfo","couponCode","startDate","endDate","amtPerAddress","minRedeemAmt","maxRedeemAmt","targetAddress","GetPromotionBalance","promoCode","methods","checkPromotionalBalance","call","from","result","GetCouponBalance","checkCouponBalance","getPromotionWithBalances","promoList","res","leftOver","unspentEther","getCouponWithBalance","couponList","Table1","props","state","testData","open","bind","close","this","loadBlockchainData","TopUpFunds","reclaimEthers","showTopUpModal","toStoreAmount","event","setState","amount","target","value","e","preventDefault","promoCodeValue","currentTarget","web3","Web3","givenProvider","eth","getChainId","chainId","accountInfo","Contract","getAccounts","accounts","promo","showModal","weiValue","utils","toWei","toString","that","topUp","send","on","window","confirm","alert","location","reload","collectLeftoverEther","receipt","fromWei","CollectLeftOver","tableHeader","header","listData","class","map","rows","Date","toBN","Balance","type","title","onClick","dateCreated","toLocaleString","totalEth","Modal","className","show","onHide","animation","bsSize","Header","closeButton","Title","Body","style","height","width","name","onChange","toStorePromoCode","disabled","Footer","id","React","Component","RedeemTable","toStoreCouponAmt","toStoreWalletAmt","showTransactionModal","PerformTransaction","couponAmt","walletAmt","transaction","date","MyCoupon","RedeemPromotion","button","document","querySelector","keccak256","redeem","textAlign","float","App","Connect","ethereum","enable","address","outputText","getBalance","err","currentBalance","getElementById","display","basename","to","color","dangerouslySetInnerHTML","__html","path","element","Home","ether","minSpendingAmt","maxSpendingAmt","checkChainID","CreateNewPromotion","toStoreAccount","toStoreEther","toStoreStartDate","toStoreEndDate","toStoreMinSpendingAmt","toStoreMaxSpendingAmt","depositValue","minSpendingValue","maxSpendingValue","Math","round","getTime","mint","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d2836b99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADDRESS = '0xE11291A837C7d72D05381d3c89F8292851fFFaFf' // Ropsten address\n\nexport const CHAIN_ID = 3 // Ropsten chain ID\n\nexport const NETWORK_NAME = 'Ropsten' // Ropsten Network name\n\n// export const ADDRESS = '0xE13DB8A5b689b83D25332B32d3bb864a896c352b' // localhost address\n\n// export const CHAIN_ID = 1337 // localhost chain ID\n\n// export const NETWORK_NAME = 'localhost' // localhost Network name\n\n\nexport const ABI = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"couponHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"date\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"CollectLeftOver\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"couponHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sponsorAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"targetAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"couponCode\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"totalEth\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amtPerAddress\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"startDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"endDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"minRedeemAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"maxRedeemAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"dateCreated\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Promotion\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"couponHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bytes32\",\n        \"name\": \"RedeemID\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"date\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"string\",\n        \"name\": \"couponHash\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"date\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TopUp\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"RedeemID\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"couponAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"walletAmt\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transaction\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalPerAddress\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"targetAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"startDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"endDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"minRedeemAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"maxRedeemAmt\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"collectLeftoverEther\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"topUp\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"checkPromotionalBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"leftOver\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"unspentEther\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"couponAmt\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transaction\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"checkCouponBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amt\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"promoCode\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"checkPromotionDetails\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"totalPerAddress\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"isPromoValid\",\n        \"type\": \"bool\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"targetAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"startDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"endDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"minRedeemAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"maxRedeemAmt\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n","import Web3 from 'web3'\n\nexport function hello(){\n    alert('hello');\n}\n\nexport function getPromotion(contractInstance,account){\n    return new Promise(function(resolve, reject) {\n        var codeArray = [];\n        contractInstance.getPastEvents('Promotion', {\n            filter: {sponsorAddress:account}, // Using an array means OR: e.g. 20 or 23\n            fromBlock: 0,\n            toBlock: 'latest'\n        }, function(error, events){\n          console.log(events);\n          if(events.length > 0){\n            // console.log(events[0].returnValues); \n            for(var i=0;i<events.length;i++){\n              \n              // Get promotional balance for all of them\n              // console.log(events[i].returnValues[\"couponCode\"]);\n              // var res = await GetPromotionBalance(contractInstance,account,events[i].returnValues[\"couponCode\"]);\n              // console.log(\"Balance is \" + res.leftOver);\n              // events[i].returnValues.Balance = res.leftOver;\n              // events[i].returnValues.unspentEther = res.unspentEther;\n              // console.log(events[i].returnValues);\n              codeArray.push(events[i].returnValues);\n              // codeArray.push([events[i].returnValues.couponCode,events[i].returnValues.sponsorAddress,new Date(events[i].returnValues.dateCreated*1000),events[i].returnValues.targetAddress,Web3.utils.fromWei(events[i].returnValues.totalEth,\"ether\"),Web3.utils.fromWei(events[i].returnValues.amtPerAddress,\"ether\"),Web3.utils.fromWei(events[i].returnValues.minRedeemAmt,\"ether\"),Web3.utils.fromWei(events[i].returnValues.maxRedeemAmt,\"ether\"),new Date(events[i].returnValues.startDate*1000),new Date(events[i].returnValues.endDate*1000)]);\n            }\n            resolve(codeArray);            \n          }\n          })\n        .then(function(events){\n        });\n    });\n}\n\nexport function getPromotionForCouponHash(contractInstance,hash){\n  return new Promise(function(resolve, reject) {\n      var codeArray = [];\n      contractInstance.getPastEvents('Promotion', {\n          filter: {couponHash:hash}, // Using an array means OR: e.g. 20 or 23\n          fromBlock: 0,\n          toBlock: 'latest'\n      }, function(error, events){\n        console.log(events);\n        if(events.length > 0){\n          // console.log(events[0].returnValues); \n          // for(var i=0;i<events.length;i++){\n            codeArray.push(events[0].returnValues);\n          // }\n        }\n        resolve(codeArray);            \n        })\n      .then(function(events){\n      });\n  });\n}\n\n\nexport function getRedeem(contractInstance,account){\n    return new Promise(function(resolve, reject) {\n        var codeArray = [];\n        contractInstance.getPastEvents('Redeem', {\n            filter: {user:account}, // Using an array means OR: e.g. 20 or 23\n            fromBlock: 0,\n            toBlock: 'latest'\n        }, function(error, events){\n          console.log(events);\n          if(events.length > 0){\n            // console.log(events[0].returnValues);\n            for(var i=0;i<events.length;i++){\n              codeArray.push(events[i].returnValues);\n            } \n            resolve(codeArray);            \n          }\n          })\n        .then(function(events){\n        });\n    });\n}\n\nexport function getRedeemByAccountAndCouponHash(contractInstance,couponhash,account){\n  return new Promise(function(resolve, reject) {\n      var codeArray = [];\n      contractInstance.getPastEvents('Redeem', {\n          filter: {couponHash: couponhash, user:account}, // Using an array means OR: e.g. 20 or 23\n          fromBlock: 0,\n          toBlock: 'latest'\n      }, function(error, events){\n        console.log(events);\n        if(events.length > 0){\n            codeArray.push(events[0].returnValues);\n        }\n        resolve(codeArray); \n        })\n      .then(function(events){\n      });\n  });\n}\n\nexport async function getRedeemCouponInfo(contractInstance,account){\n    // return new Promise(function(resolve, reject) {\n\n      var redeems = await getRedeem(contractInstance,account);\n      for(var i=0;i<redeems.length;i++){\n        var couponInfo = await getPromotionForCouponHash(contractInstance,redeems[i][0]);\n        // append promotion code,target account, starting date, ending date, amount redemmed, min coupon txn amount and max coupon txn amount\n        console.log(couponInfo)\n        if(couponInfo.length > 0){\n          redeems[i][\"couponCode\"] = couponInfo[0].couponCode;\n          redeems[i][\"startDate\"] = couponInfo[0].startDate;\n          redeems[i][\"endDate\"] = couponInfo[0].endDate;\n          redeems[i][\"endDate\"] = couponInfo[0].endDate;\n          redeems[i][\"amtPerAddress\"] = couponInfo[0].amtPerAddress;\n          redeems[i][\"minRedeemAmt\"] = couponInfo[0].minRedeemAmt;\n          redeems[i][\"maxRedeemAmt\"] = couponInfo[0].maxRedeemAmt;\n          redeems[i][\"targetAddress\"] = couponInfo[0].targetAddress;\n        }\n      }\n      return redeems;\n}\n\nexport function GetPromotionBalance(contractInstance,account,promoCode){\n   return new Promise(function(resolve, reject) {\n    // var details = await contractInstance.checkPromotionalBalance.call(promoCode,{from: account});\n    // console.log(details);\n    // // return resolve(details);\n    // return details;\n    contractInstance.methods.checkPromotionalBalance(promoCode).call({from: account})\n    .then(function(result){\n        console.log(result);\n        return(resolve(result));\n    });\n   });\n\n}\n\nexport function GetCouponBalance(contractInstance,account,promoCode){\n  return new Promise(function(resolve, reject) {\n   // var details = await contractInstance.checkPromotionalBalance.call(promoCode,{from: account});\n   // console.log(details);\n   // // return resolve(details);\n   // return details;\n   contractInstance.methods.checkCouponBalance(promoCode).call({from: account})\n   .then(function(result){\n       console.log(result);\n       return(resolve(result));\n   });\n  });\n\n}\n\nexport async function getPromotionWithBalances(contractInstance,account){\n    var promoList = await getPromotion(contractInstance,account);\n    for(var i=0;i<promoList.length;i++){\n      console.log(\"Promotion code is \" + promoList[i][\"couponCode\"]);\n      var res = await GetPromotionBalance(contractInstance,account,promoList[i][\"couponCode\"]);\n      // append promotion code,target account, starting date, ending date, amount redemmed, min coupon txn amount and max coupon txn amount\n      console.log(\"Coupon \" + promoList[i][\"couponCode\"] + \" still has \" + res.leftOver);\n      // if(res.length > 0){\n        promoList[i][\"Balance\"] = res.leftOver;\n        promoList[i][\"unspentEther\"] = res.unspentEther;\n      // }\n      \n    }\n    return promoList;\n}\n\nexport async function getCouponWithBalance(contractInstance,account){\n  var couponList = await getRedeemCouponInfo(contractInstance,account);\n  for(var i=0;i<couponList.length;i++){\n    console.log(\"Coupon code is \" + couponList[i][\"couponCode\"]);\n    var res = await GetCouponBalance(contractInstance,account,couponList[i][\"couponCode\"]);\n    // append promotion code,target account, starting date, ending date, amount redemmed, min coupon txn amount and max coupon txn amount\n    console.log(\"Coupon \" + couponList[i][\"couponCode\"] + \" still has \" + res);\n    // if(res.length > 0){\n    couponList[i][\"Balance\"] = res;\n    console.log(couponList);\n    // }    \n  }\n  return couponList;\n}\n\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport {ADDRESS, ABI} from './ABI'\nimport { Modal, Button } from \"react-bootstrap\";\nimport {hello,getPromotion,getPromotionWithBalances} from './helper';\n\nclass Table1 extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n        this.TopUpFunds = this.TopUpFunds.bind(this);\n        this.reclaimEthers = this.reclaimEthers.bind(this);\n        this.showTopUpModal = this.showTopUpModal.bind(this);\n        this.toStoreAmount = this.toStoreAmount.bind(this);\n      }\n\n      toStoreAmount(event){\n        this.setState({amount: event.target.value});\n        console.log(event.target.value);\n      }\n\n      showTopUpModal(e){\n        // event.preventDefault();\n        // alert(\"hello \" + event.target.value);\n        e.preventDefault();\n        var promoCodeValue = e.currentTarget.value;\n        this.setState({promoCode: promoCodeValue});\n        this.open();\n        //console.log(e.currentTarget.value);\n        \n      }\n\n      async loadBlockchainData() {\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var codeArray = [];\n        var promoOrigin = [];\n        var promo = [];\n        var promoDate = [];\n        var PromotionLimit = [];\n    \n        promo = await getPromotionWithBalances(contractInstance,accounts[0]);\n        console.log(promo);\n        this.setState({testData:promo});\n        console.log(\"from Home\");\n        console.log(this.state.testData);\n    \n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {testData: '',promoCode: ''};\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n      }\n\n      open() {\n        this.setState({showModal: true});\n      }\n      \n      close() {\n        this.setState({showModal: false});\n      }\n\n      async TopUpFunds(){\n        const web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        var weiValue = web3.utils.toWei(this.state.amount.toString(),'ether');\n\n        var that = this;\n\n        contractInstance.methods.topUp(this.state.promoCode).send({from: accounts[0], value: weiValue})\n        .on(\"transactionHash\",function(hash){\n          var bool = window.confirm('Promotion top up pending. User will be notified once it is confirmed. Click Ok to check transaction status.');\n          if(bool == true){\n            window.open(\"https://ropsten.etherscan.io/tx/\" + hash);\n          }\n          that.close();\n          // $('#myModal').modal('hide');\n          // window.location.reload(true);\n        })\n        .on(\"receipt\",function(hash){\n          alert('Promotion top up success');\n          window.location.reload(true);\n        })\n        .on(\"error\", function(error){\n          alert(error);\n        });\n\n      }\n\n    async reclaimEthers(e){\n        e.preventDefault();\n        var promoCode = e.currentTarget.value;\n\n        const web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        // var weiValue = web3.utils.toWei(this.state.amount.toString(),'ether');\n\n        var that = this;\n\n\n        contractInstance.methods.collectLeftoverEther(promoCode).send({from: accounts[0]})\n        .on(\"transactionHash\",function(hash){\n          var bool = window.confirm('Ether withdrawal pending. User will be notified once it is confirmed. Click Ok to check transaction status.');\n          if(bool == true){\n            window.open(\"https://ropsten.etherscan.io/tx/\" + hash);\n          }\n          // $('#myModal').modal('hide');\n          // window.location.reload(true);\n        })\n        .on(\"receipt\",function(receipt){\n          console.log(receipt);\n          alert(web3.utils.fromWei(receipt.events.CollectLeftOver.returnValues.amount,\"ether\") + ' unspent remaining Ether reclaimed by user');\n          window.location.reload(true);\n        })\n        .on(\"error\", function(error){\n          console.log(error);\n          alert(error);\n        });\n      }\n\n\n    render(){\n        const tableHeader = this.props.header;\n        var listData = this.state.testData;\n        return (\n            <>\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                {tableHeader.map((header) => <th>{header}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {(() => {\n                  {console.log(\"List data is \")}\n                              {console.log(listData)}\n                    const rows = [];\n                    for (let i = 0; i < listData.length; i++) {\n                    // For promotions sponsored, only show active and expired promotions if unclaimed\n                    if(!(new Date() > new Date(listData[i].endDate * 1000) && (Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance),\"ether\") == 0))){\n                      rows.push(<tr>\n                        <td> {(() => {\n                          if(new Date() > new Date(listData[i].endDate * 1000)){\n                            return <><button type=\"button\" class=\"btn\" title=\"Reclaim unspent Ethers\" value={listData[i].couponCode} onClick={this.reclaimEthers}><i class=\"fa fa-times\"></i></button></>\n                          }\n                          else{\n                            return <><button type=\"button\" class=\"btn\" title=\"Top up promotion\" value={listData[i].couponCode} onClick={this.showTopUpModal}><i class=\"fa fa-credit-card\"></i></button></>\n                          }\n                          })()}</td>\n                        {/* <td><button type=\"button\" class=\"btn\" title=\"top up promotion\" value={listData[i].couponCode} onClick={this.showTopUpModal}><i class=\"fa fa-credit-card\"></i></button></td> */}\n                        <td>{listData[i].couponCode}</td>\n                        <td>{new Date(listData[i].dateCreated * 1000).toLocaleString()}</td>\n                        <td>{listData[i].targetAddress}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].totalEth),\"ether\")}</td>\n                        {/* <td>{listData[i].unspentEther}</td> */}\n                        <td><b>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance),\"ether\")}</b></td>\n                        <td>{new Date(listData[i].startDate*1000).toLocaleString()}</td>\n                        <td>{new Date(listData[i].endDate*1000).toLocaleString()}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].amtPerAddress),\"ether\")}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].minRedeemAmt),\"ether\")}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].maxRedeemAmt),\"ether\")}</td>\n                        </tr>);\n                      } \n                    }\n                    return rows;\n                })()\n                }\n              </tbody>\n            </table>\n            {/* {JSON.stringify(listData)} */}\n\n            <Modal className=\"modalTopUp\" \n          show={this.state.showModal} \n          onHide={this.close}\n          animation={true} \n      bsSize=\"small\">\n\n                      <Modal.Header closeButton>\n      <Modal.Title>Top Up Promotion Funds</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n          <table>\n                    <tr style={{ height: '45px' }}>\n                      <td style={{ width: '200px' }}>Promotion code:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtPromoCode\" value={this.state.promoCode} onChange={this.toStorePromoCode} disabled/></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Amount top up(eth):</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtAmt\" value={this.state.amount} onChange={this.toStoreAmount} /></td>\n                    </tr>\n                  </table>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <button type=\"button\" class=\"btn btn-success\" onClick={this.TopUpFunds} id=\"btn_TopUp\">Top Up Promotion Funds</button>\n            <button type=\"button\" class=\"btn btn-danger\" onClick={this.close}>Close</button>\n          </Modal.Footer>         \n        </Modal> \n\n          </>\n        );\n    }\n}\n\nexport default Table1;","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport {ADDRESS, ABI} from './ABI'\nimport {hello,getPromotion,getRedeemCouponInfo,getCouponWithBalance} from './helper';\nimport { Modal, Button } from \"react-bootstrap\";\n\nclass RedeemTable extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n        this.toStoreCouponAmt = this.toStoreCouponAmt.bind(this);\n        this.toStoreWalletAmt = this.toStoreWalletAmt.bind(this);\n        this.showTransactionModal = this.showTransactionModal.bind(this);\n        this.PerformTransaction = this.PerformTransaction.bind(this);\n      }\n\n      toStoreCouponAmt(event){\n        this.setState({couponAmt: event.target.value});\n        console.log(event.target.value);\n      }\n\n      toStoreWalletAmt(event){\n        this.setState({walletAmt: event.target.value});\n        console.log(event.target.value);\n      }\n\n      showTransactionModal(e){\n        // event.preventDefault();\n        // alert(\"hello \" + event.target.value);\n        e.preventDefault();\n        var promoCodeValue = e.currentTarget.value;\n        this.setState({promoCode: promoCodeValue});\n        this.open();\n        //console.log(e.currentTarget.value);\n        \n      }\n\n      async loadBlockchainData() {\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var codeArray = [];\n        var promoOrigin = [];\n        var promo = [];\n        var promoDate = [];\n        var PromotionLimit = [];\n    \n        promo = await getCouponWithBalance(contractInstance,accounts[0]);\n        console.log(\"Promo data is \");\n        console.log(promo);\n        this.setState({testData:promo});\n        console.log(\"from Home\");\n        console.log(this.state.testData);\n    \n      }\n\n    async PerformTransaction(){\n      const web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n\n      // console.log(this.state);\n      var couponAmt = this.state.couponAmt;\n      var walletAmt = this.state.walletAmt;\n      console.log('state value is ' + couponAmt);\n      console.log('state value is ' + walletAmt);\n      var couponAmt = web3.utils.toWei(couponAmt,'ether');\n      var walletAmt = web3.utils.toWei(walletAmt,'ether');\n\n      var that = this;\n\n      contractInstance.methods.transaction(this.state.promoCode,couponAmt).send({from: accounts[0],value: walletAmt})\n      .on(\"transactionHash\",function(hash){\n        var bool = window.confirm('Transaction pending. User will be notified once it is confirmed. Click Ok to check transaction status.');\n        if(bool == true){\n          window.open(\"https://ropsten.etherscan.io/tx/\" + hash);\n        }\n        that.close();\n        // $('#myModal').modal('hide');\n        // window.location.reload(true);\n      })\n      .on(\"receipt\",function(hash){\n          alert('Transaction success');\n          // $('#myModal').modal('hide');\n          window.location.reload(true);\n      })\n      .on(\"error\", function(error){\n          alert(error);\n      });\n    }\n\n    open() {\n      this.setState({showModal: true});\n    }\n    \n    close() {\n      this.setState({showModal: false});\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {testData: ''};\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n      }\n\n\n\n    render(){\n        const tableHeader = this.props.header;\n        var listData = this.state.testData;\n        return (\n            <>\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                {tableHeader.map((header) => <th>{header}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {(() => {\n                    const rows = [];\n                    for (let i = 0; i < listData.length; i++) {\n                    // display only active coupons\n                    if(!(new Date() > new Date(listData[i].endDate * 1000))){\n                        rows.push(<tr>\n                          <td> {(() => {\n                            // Only allow transactions if the coupon balance is a non zero value\n                          if(Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance),\"ether\") > 0){\n                            return <><button type=\"button\" class=\"btn\" title=\"Spend coupon value\" value={listData[i].couponCode} onClick={this.showTransactionModal}><i class=\"fa fa-credit-card\"></i></button></>\n                          }\n                          })()}</td>\n                        {/* <td><button type=\"button\" class=\"btn\" title=\"Spend coupon value\" value={listData[i].couponCode} onClick={this.showTransactionModal}><i class=\"fa fa-credit-card\"></i></button></td> */}\n                        <td>{listData[i].couponCode}</td>\n                        <td>{new Date(listData[i].date * 1000).toLocaleString()}</td>\n                        <td>{listData[i].targetAddress}</td>\n                        {/* <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].totalEth),\"ether\")}</td> */}\n                        <td>{new Date(listData[i].startDate*1000).toLocaleString()}</td>\n                        <td>{new Date(listData[i].endDate*1000).toLocaleString()}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].amtPerAddress),\"ether\")}</td>\n                        <td><b>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance),\"ether\")}</b></td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].minRedeemAmt),\"ether\")}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].maxRedeemAmt),\"ether\")}</td>\n                        </tr>);\n                      }\n                    }\n                    return rows;\n                })()\n                }\n              </tbody>\n            </table>\n            {/* {JSON.stringify(listData)} */}\n\n            <Modal className=\"modalTransaction\" \n          show={this.state.showModal} \n          onHide={this.close}\n          animation={true} \n      bsSize=\"small\">\n\n            <Modal.Header closeButton>\n      <Modal.Title>Spend coupon value</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n          <table>\n                    <tr style={{ height: '45px' }}>\n                      <td style={{ width: '200px' }}>Promotion code:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtPromoCode\" value={this.state.promoCode} onChange={this.toStorePromoCode} disabled/></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Coupon amount(eth):</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtCouponAmt\" value={this.state.couponAmt} onChange={this.toStoreCouponAmt} /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Wallet amount(eth):</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtWalletAmt\" value={this.state.walletAmt} onChange={this.toStoreWalletAmt} /></td>\n                    </tr>\n                  </table>\n          </Modal.Body>\n          <Modal.Footer>\n            <button type=\"button\" class=\"btn btn-success\" onClick={this.PerformTransaction} id=\"btn_transaction\">Perform Transaction</button>\n            <button type=\"button\" class=\"btn btn-danger\" onClick={this.close}>Close</button>\n          </Modal.Footer>         \n        </Modal> \n\n          </>\n        );\n    }\n}\n\nexport default RedeemTable;","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport { NavLink } from \"react-router-dom\";\nimport {ADDRESS, ABI, CHAIN_ID, NETWORK_NAME} from './ABI'\n// import { Web3ReactProvider } from '@web3-react/core'\n// import { Web3Provider } from '@ethersproject/providers'\n// import { useWeb3React } from '@web3-react/core'\n// import { InjectedConnector } from '@web3-react/injected-connector'\nimport {hello,getRedeemCouponInfo,getRedeem,getRedeemByAccountAndCouponHash,getPromotionForCouponHash} from './helper';\nimport RedeemTable from './RedeemTable';\n\n\nclass MyCoupon extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n        this.toStorePromoCode = this.toStorePromoCode.bind(this);\n        this.RedeemPromotion = this.RedeemPromotion.bind(this);\n        \n\n      }\n\n      async loadBlockchainData(){\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        // Disable redeem button if chain ID is not correct\n        var button = document.querySelector('#btn_RedeemPromotion');\n        if(chainId != CHAIN_ID){\n            alert(\"Incorrect chain ID. This application only runs on \"+ NETWORK_NAME);\n            button.disabled = true;\n        }\n        else{\n            button.disabled = false;\n        }\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var redeems = [];\n    \n        // redeems = await getRedeem(contractInstance,accounts[0]);\n        redeems = await getRedeemCouponInfo(contractInstance,accounts[0]);\n        console.log(redeems);\n    \n      }\n\n    async RedeemPromotion(){\n        const web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        console.log(accounts[0]);\n        console.log(this.state.promoCode);\n\n        // check if user has redemeed the coupon\n        var redeemExist = await getRedeemByAccountAndCouponHash(contractInstance, web3.utils.keccak256(this.state.promoCode), accounts[0]);\n        if(redeemExist == 0){\n            // check if promotion code exist. If not, tell the user that it does not exist\n            var couponExist = await getPromotionForCouponHash(contractInstance,web3.utils.keccak256(this.state.promoCode));\n            if(couponExist != 0){\n                contractInstance.methods.redeem(this.state.promoCode).send({from: accounts[0]})\n                .on(\"transactionHash\",function(hash){\n                    var bool = window.confirm('Coupon redeem pending. User will be notified once it is confirmed. Click Ok to check transaction status.');\n                    if(bool == true){\n                        window.open(\"https://ropsten.etherscan.io/tx/\" + hash);\n                    }\n                    // $('#myModal').modal('hide');\n                    // window.location.reload(true);\n                })\n                .on(\"receipt\",function(hash){\n                    alert('Coupon redeem success');\n                    // $('#myModal').modal('hide');\n                    window.location.reload(true);\n                })\n                .on(\"error\", function(error){\n                    alert(error);\n                });\n\n            }\n            else{\n                alert(\"Coupon Does not exist\");\n            }\n        }\n        else{\n            alert(\"User has already redemeed the coupon\");\n        }\n\n\n\n      }\n\n      toStorePromoCode(event){\n        this.setState({promoCode: event.target.value});\n        console.log(event.target.value);\n      }\n\n      constructor(props) {\n        super(props)\n        this.state = {promoCode: ''};\n      }\n\n    render(){\n\n        const header = [\"\",\"Promotion Code\",\"Date Redeemed\",\"Target account\",\"Starting Date\",\"Ending Date\",\"Redeemed Ether\",\"Current Balance\",\"Min Coupon Txn Amount\",\"Max coupon txn amount\"]\n\n        return (\n            \n        <div class=\"container mt-5\">\n        <div class=\"row\">\n            <div style={{textAlign:'right'}}>\n                <table style={{float:'right'}}>\n                    <tr>\n                        <td><input type=\"text\" class=\"form-control\" name=\"txtPromoCode\" id=\"txtPromoCode\" value={this.state.promoCode} onChange={this.toStorePromoCode} /></td><td><button type=\"button\" class=\"btn btn-success\" onClick={this.RedeemPromotion} id=\"btn_RedeemPromotion\">Redeem Coupon</button></td>\n                    </tr>\n                </table>\n            </div>\n            <h5>My coupons</h5>\n            <hr/>\n            <br/>\n            <br/>\n            {/* <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th></th>\n                <th>Promotion Code</th>\n                <th>Date Redemmed</th>\n                <th>Target account</th>\n                <th>Ether balance</th>\n                <th>Starting Date</th>\n                <th>Ending Date</th>\n                <th>Redemmed Ether</th>\n                <th>Min Coupon Txn Amount</th>\n                <th>Max Coupon Txn Amount</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <th><i class=\"fa fa-credit-card\"></i></th>\n                <td>Ethereum</td>\n                <td>01/12/2021</td>\n                <td>0x28cd15e5B23a8bA95Bb4660c3d305Fb18081c517</td>\n                <td>0.6</td>\n                <td>15/01/2022</td>\n                <td>20/01/2022</td>\n                <td>2</td>\n                <td>0.1</td>\n                <td>0.5</td>\n            </tr>\n            </tbody>\n        </table> */}\n        <RedeemTable header={header}/>\n        </div>\n        </div>\n\n        );\n    }\n}\n\nexport default MyCoupon;\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport {ADDRESS, ABI, CHAIN_ID, NETWORK_NAME} from './ABI'\nimport { Modal, Button } from \"react-bootstrap\";\nimport Table1 from './table';\n\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n  Outlet,\n  Routes\n} from \"react-router-dom\";\nimport MyCoupon from \"./myCoupon\";\nimport {hello,getPromotion,getPromotionWithBalances,getPromotionForCouponHash} from './helper';\n\nclass App extends React.Component  {\n\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.Connect = this.Connect.bind(this);\n  }\n\n  async Connect(){\n    if (window.ethereum) {\n      // alert('installed');\n      const address = await window.ethereum.enable();\n      \n      // alert(address);\n      var outputText = '<b>Current Account:</b> ' + address + '   ';\n      var that = this;\n\n      const web3 = new Web3(Web3.givenProvider);\n      // Get account balance\n      web3.eth.getBalance(address.toString(), function(err, result) {\n      if (err) {\n        console.log(err)\n      } else {\n        var currentBalance = (Web3.utils.fromWei(result, \"ether\") + \" <b>ETH</b>\");\n        // console.log(currentBalance);\n        outputText = outputText + \" \" + currentBalance;\n        console.log(outputText);\n        that.setState({accountInfo: outputText});\n        const btn_connectWallet = document.getElementById('btn_connectWallet');\n        btn_connectWallet.style.display = 'none';\n      }\n    })\n\n    console.log(outputText);\n    this.setState({accountInfo: outputText});\n    }\n    else{\n      alert('Metamask not installed');\n    }\n  }\n\n\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider);\n    const chainId = await web3.eth.getChainId();\n    console.log(\"Chain ID is \" + chainId);\n    this.setState({accountInfo: ''});\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    // await GetAllPromoCodes(contractInstance);\n\n    var that = this;\n    var codeArray = [];\n    var promoOrigin = [];\n    var promo = [];\n    var promoDate = [];\n    var PromotionLimit = [];\n\n    promo = await getPromotion(contractInstance,accounts[0]);\n    console.log(\"from App\");\n    console.log(promo);\n\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {accountInfo: ''};\n  }\n\nrender(){\n  return(\n\n    <div class=\"container\">\n    <div class=\"p-5 bg-primary text-white text-center\">\n  <h1>EthCoupon</h1>\n  <p>Get free Ether to spend on products and services</p> \n</div>\n\n<HashRouter basename=\"/\">\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav-item\">\n          {/* <a class=\"nav-link active\" href=\"index.html\">My Promotions</a> */}\n          <Link to=\"/\" class=\"nav-link active\" >My Promotions</Link>\n        </li>\n        <li class=\"nav-item\">\n          {/* <a class=\"nav-link\" href=\"myCoupons.html\">My coupons</a> */}\n          <Link to=\"/myCoupon\" class=\"nav-link active\" >My Coupons</Link>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" style={{color: '#fff'}}>\n       <div id=\"lblAcctInfo\" style={{display: 'inline'}}><div style={{display: 'inline'}} dangerouslySetInnerHTML={{__html: this.state.accountInfo}}></div>&nbsp;&nbsp;&nbsp;</div>\n       <button type=\"button\" class=\"btn btn-primary\" id=\"btn_connectWallet\" onClick={this.Connect}>Connect Wallet</button>\n     </li>\n   </ul>\n  </div>\n</nav>\n\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/myCoupon\" element={<MyCoupon />} />\n    </Routes>\n\n</HashRouter>\n\n</div>\n\n\n  );\n}\n}\n\nclass Home extends React.Component  {\n\n  componentDidMount() {\n    // this.loadBlockchainData();\n    this.checkChainID();\n    this.CreateNewPromotion = this.CreateNewPromotion.bind(this);\n    this.toStorePromoCode = this.toStorePromoCode.bind(this);\n    this.toStoreAccount = this.toStoreAccount.bind(this);\n    this.toStoreEther = this.toStoreEther.bind(this);\n    this.toStoreStartDate = this.toStoreStartDate.bind(this);\n    this.toStoreEndDate = this.toStoreEndDate.bind(this);\n    this.toStoreMinSpendingAmt = this.toStoreMinSpendingAmt.bind(this);\n    this.toStoreMaxSpendingAmt = this.toStoreMaxSpendingAmt.bind(this);\n    this.toStoreAmount = this.toStoreAmount.bind(this);\n  }\n\n  toStorePromoCode(event){\n    this.setState({promoCode: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreAccount(event){\n    this.setState({account: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreEther(event){\n    this.setState({ether: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreAmount(event){\n    this.setState({amount: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreStartDate(event){\n    this.setState({startDate: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreEndDate(event){\n    this.setState({endDate: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreMinSpendingAmt(event){\n    this.setState({minSpendingAmt: event.target.value});\n    console.log(event.target.value);\n  }\n\n  toStoreMaxSpendingAmt(event){\n    this.setState({maxSpendingAmt: event.target.value});\n    console.log(event.target.value);\n  }\n\n\n  async checkChainID() {\n    const web3 = new Web3(Web3.givenProvider);\n    const chainId = await web3.eth.getChainId();\n    console.log(chainId);\n    this.setState({accountInfo: ''});\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    // await GetAllPromoCodes(contractInstance);\n\n    // var that = this;\n    // var codeArray = [];\n    // var promoOrigin = [];\n    // var promo = [];\n    // var promoDate = [];\n    // var PromotionLimit = [];\n\n    var button = document.querySelector('#btn_AddPromotion');\n    if(chainId != CHAIN_ID){\n        alert(\"Incorrect chain ID. This application only runs on \"+ NETWORK_NAME);\n        button.disabled = true;\n    }\n    else{\n        button.disabled = false;\n    }\n\n    // promo = await getPromotionWithBalances(contractInstance,accounts[0]);\n    // console.log(promo);\n    // this.setState({testData:promo});\n    // console.log(\"from Home\");\n    // console.log(this.state.testData);\n\n  }\n\n  async CreateNewPromotion(){\n    // const web3 = new Web3(Web3.givenProvider);\n    // const chainId = await web3.eth.getChainId();\n    // alert(chainId);\n    const web3 = new Web3(Web3.givenProvider);\n    // const address = await window.ethereum.enable();\n    const accounts = await web3.eth.getAccounts();\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    // var etherAmount = web3.utils.toBN(this.state.ether);\n    var weiValue = web3.utils.toWei(this.state.ether.toString(),'ether');\n    // var depositAmount = web3.utils.toBN(this.state.amount);\n    var depositValue = web3.utils.toWei(this.state.amount,'ether');\n    // var minSpendingAmt = web3.utils.toBN(this.state.minSpendingAmt);\n    var minSpendingValue = web3.utils.toWei(this.state.minSpendingAmt,'ether');\n    // var maxSpendingAmt = web3.utils.toBN(this.state.maxSpendingAmt);\n    var maxSpendingValue = web3.utils.toWei(this.state.maxSpendingAmt,'ether');\n    const startDate = Math.round((new Date(this.state.startDate.toString())).getTime() / 1000);\n    const endDate = Math.round((new Date(this.state.endDate.toString())).getTime() / 1000);\n    // console.log(address);\n    \n    console.log(accounts[0]);\n    var that = this;\n\n    // Check if promotion code exists. Do not continue if promotion code already exists\n    var couponExists = await getPromotionForCouponHash(contractInstance, web3.utils.keccak256(this.state.promoCode));\n    if(couponExists == 0){\n      contractInstance.methods.mint(this.state.promoCode, weiValue, this.state.account, startDate, endDate, minSpendingValue, maxSpendingValue).send({from: accounts[0], value: depositValue})\n      .on(\"transactionHash\",function(hash){\n        var bool = window.confirm('Promotion creation pending. User will be notified once it is confirmed. Click Ok to check transaction status.');\n        if(bool == true){\n          window.open(\"https://ropsten.etherscan.io/tx/\" + hash);\n        }\n        that.close();\n        // $('#myModal').modal('hide');\n        // window.location.reload(true);\n      })\n      .on(\"receipt\",function(hash){\n        alert('Promotion add success');\n        that.close();\n        window.location.reload(true);\n      })\n      .on(\"error\", function(error){\n        alert(error);\n      });\n    }\n    else{\n      alert(\"Promotion code already exists\");\n    }\n    \n    \n\n\n\n  }\n\n  open() {\n    this.setState({showModal: true});\n  }\n  \n  close() {\n    this.setState({showModal: false});\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {promoCode: '', account: '', ether: '' ,startDate: '',endDate: '',minSpendingAmt: '',maxSpendingAmt: '',amount:'',testData:''};\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n\n  render(){\n\n    const header = [\"\",\"Promotion Code\",\"Date Created\",\"Target account\",\"Starting Ether balance\",\"Present Ether Balance\",\"Starting Date\",\"Ending Date\",\"Ether per Account\",\"Min coupon txn amount\",\"Max coupon txn amount\"]\n\n      return (\n\n\n        <>\n        <div class=\"container mt-5\">\n          <div class=\"row\">\n            <div style={{ textAlign: 'right' }}>\n              {/* <button type=\"button\" class=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal1\">Add New Promotion</button> */}\n              <button type=\"button\" class=\"btn btn-success\" onClick={this.open} id=\"btn_AddPromotion\">Add New Promotion</button> \n            </div>\n            <h5>My Promotions</h5>\n            <hr />\n            <br />\n            {/* <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Promotion Code</th>\n                  <th>Date Created</th>\n                  <th>Target account</th>\n                  <th>Starting Ether Balance</th>\n                  <th>Present Ether Balance</th>\n                  <th>Starting Date</th>\n                  <th>Ending Date</th>\n                  <th>Ether per account</th>\n                  <th>Min Coupon Txn Amount</th>\n                  <th>Max Coupon Txn Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th><i class=\"fa fa-credit-card\"></i></th>\n                  <td>Ethereum</td>\n                  <td>01/12/2021</td>\n                  <td>0x28cd15e5B23a8bA95Bb4660c3d305Fb18081c517</td>\n                  <td>500</td>\n                  <td>100</td>\n                  <td>15/01/2022</td>\n                  <td>20/01/2022</td>\n                  <td>2</td>\n                  <td>0.1</td>\n                  <td>0.5</td>\n                </tr>\n                <tr>\n                  <th><i class=\"fa fa-credit-card\"></i></th>\n                  <td>Doge</td>\n                  <td>01/12/2021</td>\n                  <td>0x28cd15e5B23a8bA95Bb4660c3d305Fb18081c511</td>\n                  <td>500</td>\n                  <td>100</td>\n                  <td>15/01/2022</td>\n                  <td>20/01/2022</td>\n                  <td>2</td>\n                  <td>0.1</td>\n                  <td>0.5</td>\n                </tr>\n                <tr>\n                  <th><i class=\"fa fa-window-close-o\"></i></th>\n                  <td>DogeElonMars</td>\n                  <td>01/11/2021</td>\n                  <td>0x28cd15e5B23a8bA95Bb4660c3d305Fb18081c510</td>\n                  <td>500</td>\n                  <td>0</td>\n                  <td>10/11/2021</td>\n                  <td>15/11/2021</td>\n                  <td>2</td>\n                  <td>0.1</td>\n                  <td>0.5</td>\n                </tr>\n              </tbody>\n            </table> */}\n          </div>\n        </div>\n        {/* {this.state.testData.length} */}\n        <Table1 header={header}/>\n      \n          <Modal className=\"myModal1\" \n          show={this.state.showModal} \n          onHide={this.close}\n          animation={true} \n      bsSize=\"small\">\n\n          <Modal.Header closeButton>\n      <Modal.Title>Create New Promotion</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n          <table>\n                    <tr style={{ height: '45px' }}>\n                      <td style={{ width: '200px' }}>Promotion code:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtPromoCode\" value={this.state.promoCode} onChange={this.toStorePromoCode} /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Target Account:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtAccount\" value={this.state.account} onChange={this.toStoreAccount} /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Ether Deposited:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtEtherDeposited\" value={this.state.amount} onChange={this.toStoreAmount}  /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Ether per account:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtEtherPerAccount\" value={this.state.ether} onChange={this.toStoreEther}  /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Starting Date:</td>\n                      <td><input type=\"datetime-local\" class=\"form-control\" name=\"txtStartingDate\" value={this.state.startDate} onChange={this.toStoreStartDate} /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Ending Date:</td>\n                      <td><input type=\"datetime-local\" class=\"form-control\" name=\"txtEndingDate\" value={this.state.endDate} onChange={this.toStoreEndDate}  /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Min Spending Amount:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtMinSpendingAmount\" value={this.state.minSpendingAmt} onChange={this.toStoreMinSpendingAmt} /></td>\n                    </tr>\n                    <tr style={{ height: '45px' }}>\n                      <td>Max Spending Amount:</td>\n                      <td><input type=\"text\" class=\"form-control\" name=\"txtMaxSpendingAmount\" value={this.state.maxSpendingAmt} onChange={this.toStoreMaxSpendingAmt}  /></td>\n                    </tr>\n                  </table>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <button type=\"button\" class=\"btn btn-success\" onClick={this.CreateNewPromotion} id=\"btn_CreateNewPromotion\">Add New Promotion</button>\n            <button type=\"button\" class=\"btn btn-danger\" onClick={this.close}>Close</button>\n          </Modal.Footer>         \n        </Modal> \n\n          </>\n\n      );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}